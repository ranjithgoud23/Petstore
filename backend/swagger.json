{
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "Petstore Web Application API",
      "description": "Find out how your APIs work",
      "license": {
        "name": "MIT",
        "url": "https://opensource.org/licenses/MIT"
      }
    },
    "host": "localhost:4000",
    "basePath": "/api/v1",
    "schemes": [
      "http",
      "https"
    ],
    "consumes": [
      "application/json"
    ],
    "produces": [
      "application/json"
    ],
    "securityDefinitions": {
        "ApiKeyAuth":{
          "type": "apiKey",
          "in": "headers",
          "name": "authorization"
        }
    },
    "paths": {
      "/products":{
        "get": {
            "summary": "Get all the products",
            "tags": [
              "Products"
            ],
            "description": "Retrieves a list of all products available",
            "responses":{
              "200": {
                "description": "OK",
                "schema": {
                  "$ref": "#/definitions/Product"
                }
              },
              "404": {
                "description": "Product not found"
              }
            }


        }
      },
      "/product/{id}":{
        "get":{
          "summary": "get product details by id",
          "tags": [
            "Products"
          ],
          "description": "Returns information about a single product.",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of the product to retrieve",
              "schema": {
                "$ref": "#/definitions/Product"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Product data",
              "schema": {
                "$ref": "#/definitions/Product"
              }
            },
            "404": {
              "description": "Product not found"
            }
          }
        }
      },
      "/me":{
        "get": {
          "summary": "Retrieves user details of the currently logged-in user",
          "description": "Retrieves the details of the user who is currently logged in.",
          "tags": [
            "User"
          ],
          "produces": [
            "application/json"
          ],
          "security": [
            {
              "api_key": []
            }
          ],
          "responses": {
            "200": {
              "description": "User details retrieved successfully",
              "schema": {
                "$ref": "#/definitions/User"
              }
            },
            "401": {
              "description": "Unauthorized",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        }
      },
      "/password/Update":{
        "put": {
          "summary": "Update a user's password.",
          "tags": [
            "User"
          ],
          "parameters": [
            
            {
              "name": "update",
              "in": "body",
              "description": "update the password",
              "required": true,
              "schema": {
                "$ref":"#/definitions/Update"
              }
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "Password update successful."
            },
            "400": {
              "description": "Bad request. Invalid current password or password format."
            },
            "401": {
              "description": "Unauthorized. User not authenticated."
            },
            "500": {
              "description": "Internal server error."
            }
          }
        }
        
      },
      "/me/update":{
        "put": {
          "summary": "Update a user's profile information.",
          "tags": [
            "User"
          ],
          "consumes": ["multipart/form-data"],
          "parameters": [
            {
              "name": "name",
              "in": "formData",
              "description": "The user's name.",
              "required": false,
              "type": "string"
            },
            {
              "name": "email",
              "in": "formData",
              "description": "The user's email address.",
              "required": false,
              "type": "string"
            },
            {
              "name": "phone",
              "in": "formData",
              "description": "phone of the user",
              "required": false,
              "type": "string"
            },
            {
              "name": "avatar",
              "in": "formData",
              "description": "Profile picture of the user",
              "type": "file"
            }


          ],
          "responses": {
            "200": {
              "description": "Profile update successful."
            },
            "400": {
              "description": "Bad request. Invalid email format."
            },
            "401": {
              "description": "Unauthorized. User not authenticated."
            },
            "500": {
              "description": "Internal server error."
            }
          },
          "security": [
            {
              "apiKey": []
            }
          ]
        }
      },
      "/order/new":{
        "post": {
          "summary": "Create a new order.",
          "tags": [
            "Orders"
          ],
          "parameters": [
            
            {
              "name": "order creation",
              "in": "body",
              "description": "create new order",
              "required": true,
              "schema": {
                "$ref":"#/definitions/OrderCreateRequest"
              }
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "201": {
              "description": "Order creation successful.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/definitions/Order"
                  }
                }
              }
            },
            "400": {
              "description": "Bad request. Invalid product ID or quantity."
            },
            "401": {
              "description": "Unauthorized. User not authenticated."
            },
            "500": {
              "description": "Internal server error."
            }
          }
        }

      },
      "/order/{orderid}":{
        "get": {
          "summary": "Get a single order by ID",
          "description": "Returns a single order resource based on the ID provided.",
          "tags": [
            "Orders"
          ],
          "parameters": [
            {
              "name": "orderid",
              "in": "path",
              "description": "ID of the order to retrieve",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Order found",
              "schema": {
                "$ref": "#/definitions/Order"
              }
            },
            "404": {
              "description": "Order not found"
            }
          }
        }

      },
      "/register":{
        "post": {
          "summary": "Registers a new user",
          "tags": [
            "Authentication"
          ],
          "description": "Registers a new user with the provided information.",
          "consumes": ["multipart/form-data"],
          "parameters": [
            {
              "name": "name",
              "in": "formData",
              "description": "Name of the user",
              "required": true,
              "type": "string"
            },
            {
              "name": "email",
              "in": "formData",
              "description": "Email address of the user",
              "required": true,
              "type": "string"
            },
            {
              "name": "password",
              "in": "formData",
              "description": "Password of the user",
              "required": true,
              "type": "string",
              "format": "password"
            },
            {
              "name": "phone",   
              "in": "formData",
              "description": "phone of the user",
              "required": true,
              "type": "integer",
              "format": "int64"
            },
            {
              "name": "avatar",
              "in": "formData",
              "description": "Profile picture of the user",
              "type": "file"
            }
          ],
          "responses": {
            "200": {
              "description": "User registration successful"
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      },
      "/logout":{
        "get": {
          "summary": "Logs out the currently logged-in user",
          "tags": [
            "Authentication"
          ],
          "description": "Logs out the user who is currently logged in.",
          "security": [
            {
              "api_key": []
            }
          ],
          "responses": {
            "204": {
              "description": "Logout successful"
            },
            "401": {
              "description": "Unauthorized",
              "schema": {
                "$ref": "#/definitions/Error"
              }
            }
          }
        }

      },
     
     
      "/review":{
        "put": {
          "summary": "Create a new review",
          "description": "",
          "tags": [
            "Reviews"
          ],
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "review",
              "in": "body",
              "description": "Review object that needs to be added",
              "required": true,
              
              "schema": {
                "$ref": "#/definitions/Review"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Review created successfully"
            },
            "400": {
              "description": "Invalid input"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      },
      "/orders/me":{
        "get": {
          "summary": "Get orders for logged-in user",
          "description": "Returns a list of orders belonging to the logged-in user.",
          "tags": [
            "Orders"
          ],
          "security": [
            {
              "apiKeyAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "List of orders",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Order"
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            }
          }
        }

      },
      "/reviews?id={id}":{
        "get": {
          "summary": "Get all reviews",
          "description": "Returns a list of all reviews.",
          "tags": [
            "Reviews"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Product ID",
              "required": true,
              "schema": {
                "type": "string",
                "minimum": 1
              }
            }
          ],
          "responses": {
            "200": {
              "description": "List of reviews",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Review"
                }
              }
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }

      },

    "/login": {
        "post": {
          "summary": "Login user",
          "tags": [
            "Authentication"
          ],
        "description": "Logs in a user with the provided email and password",
        "consumes": ["multipart/form-data"],
        "parameters": [

          {
            "name": "email",
            "in": "formData",
            "description": "Email address of the user",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "Password of the user",
            "required": true,
            "type": "string",
            "format": "password"
          }
        ],
      "responses": {
            "200": {
              "description": "Login Success"
            },
            "401":{
              "description": "Login details are not valid!!"
            },
            "404":{
              "description": "Email is not registered!"
            },
            "500":{
              "description": "User login failed!!"
            }
          }
        }
      }
    },


    "definitions": {
      "User": {
        "properties": {
          "avatar":[
            {
              "id":{
                  "type":"string"
              },
              "url":{
                "type":"string"
              }

            }
          ],
          "id":{
            "type":"integer"
          },
          "name":{
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "phone":{
            "type":"integer"
          },
          "role":{
            "type":"string"
          },
          "Joined on":{
            "type":"string"
          }
        }
      },
      "userEmail":{
        "properties": {
          "email": {
            "type": "string"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "Register":{
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "phone":{
            "type": "integer",
            "format": "int64"
          },
          "avatar":[{
            "url":{
              "type":"url"
            },
            "id":{
              "type": "integer",
              "format": "int64"
            }

          }

          ]
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "float"
          },
          "description": {
            "type": "string"
          },
          "ratings":{
            "type": "number",
            "format": "float"
          },
          "images":[
            {
              "url":{
                "type":"url"
              },
              "id":{
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "category":{
            "type": "string"
          },
          "animal":{
            "type": "string"
          },
          "stock":{
            "type": "integer"
          },
          "numofReviews":{
            "type": "integer"
          },
          "reviews":{
            "type": "string"
          },
          "createdAt":{
            "type": "string"
          }
        }

      },
      "Order": {
        "type": "object",
        "properties": {
          "ShippingInfo":{
            "type": "string"
          },
          "PaymentInfo":{
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "customerName": {
            "type": "string"
          },
          "OrderItems":{
            "type": "string"
          },
          "orderDate": {
            "type": "string",
            "format": "date-time"
          },
          "itemsPrice":{
            "type": "float"
          },
          "shippingPrice":{
            "type": "integer"
          },
          "orderTotal": {
            "type": "number",
            "format": "double"
          },
          "OrderStatus":{
            "type": "string"
          },
          "createdAt":{
            "type": "string",
            "format": "date-time"
          }

        }
      },
      "securityDefinitions": {
        "apiKeyAuth": {
          "type": "apiKey",
          "in": "header",
          "name": "Authorization"
        }
      },
      "Review": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          },
          "rating": {
            "type": "integer",
            "minimum": 1,
            "maximum": 5
          },
          "comment": {
            "type": "string"
          }
        }
      },
      "Update":{
        "type": "object",
        "properties": {
          "oldPassword": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
      }
    },
      "OrderCreateRequest": {
        "type": "object",
        "properties": {
          "itemsPrice": {
            "type": "number",
            "format": "float",
            "example": 2.75
          },
          "taxPrice": {
            "type": "number",
            "format": "float",
            "example": 0.14
          },
          "shippingPrice": {
            "type": "number",
            "format": "float",
            "example": 25
          },
          "totalPrice": {
            "type": "number",
            "format": "float",
            "example": 27.89
          },
          "orderItems": 
            {
                "$ref": "#/definitions/OrderItem"
            },
          "shippingInfo": {
              "$ref": "#/definitions/ShippingInfo"

          },
          "paymentInfo": {
            "$ref": "#/definitions/PaymentInfo"
          }
      }
    },
      "OrderItem": {
        "type": "object",
        "properties": {
          "product": {
            "type": "string",
            "example": "5fbff4439d9ba8406833ea73"
          },
          "name": {
            "type": "string",
            "example": "Kauffman Orchards Homegrown McIntosh Apples"
          },
          "price": {
            "type": "number",
            "format": "float",
            "example": 2.75
          },
          "image": {
            "type": "string",
            "example": "https://res.cloudinary.com/shopit/image/upload/v1606293152/products/i0k1wdwi5hrpmzwxvsds.jpg"
          },
          "quantity": {
            "type": "integer",
            "example": 1
          }
        }
      },
      "ShippingInfo": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "example": "3951  Smith Street"
          },
          "city": {
            "type": "string",
            "example": "New York"
          },
          "phoneNo": {
            "type": "integer",
            "example": 5555551234
          },
          "postalCode": {
            "type": "integer",
            "example": 10001
          },
          "country": {
            "type": "string",
            "example": "United States"
          }
        }
      },
      "PaymentInfo":{
        "type": "object",
      "properties":{
        "id":{
          "type": "string",
        "example": "pi_1HrMVNAlHMiRMt8E1BguvVIo"

        },
      "status":{
        "type": "string",
        "example": "succeeded"

      }

      }
      }


    }
  }
    